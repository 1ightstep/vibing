# Generated by vibing.py
def generate_fibonacci(n):
    return [0, 1] + [generate_fibonacci(n - 1)[-1] + generate_fibonacci(n - 2)[-1] for _ in range(n - 1)]

# Usage
print(generate_fibonacci(10))  # Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
name = input("Enter your name: ")
print(f"Hello, {name}!")
a, b = 0, 1
for _ in range(10):
    print(a)
    a, b = b, a + b
f = lambda x: [i ** 2 for i in range(x)]
def greet(name):
  print(f"Hello, {name}!")

greet("Alice")
print([x**2 for x in range(1, 11)])
print([x ** 2 for x in range(1, 11)])
def greet(name):
    return f"Hello, {name}!"

print(greet("Alice"))
print("Hello, World!")
def generate_fib(n):
    fib_seq = [0, 1]
    while len(fib_seq) < n:
        fib_seq.append(fib_seq[-1] + fib_seq[-2])
    return fib_seq[:n]

# Example usage:
print(generate_fib(10))  # Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
squares = [x ** 2 for x in range(1, 11)]
print(squares)
