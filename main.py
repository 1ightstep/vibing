from dotenv import load_dotenv, dotenv_values
import os
from pathlib import Path
import requests
import json
load_dotenv()

url = "https://api.arliai.com/v1/chat/completions"

payload = json.dumps({
  "model": "Mistral-Nemo-12B-Instruct-2407",
  "messages": [
    {"role": "system", "content": "Generate a short functional python program. Do not include any imports or comments."},
    {"role": "user", "content": "generate"},
  ]
})
headers = {
  'Content-Type': 'application/json',
  'Authorization': f"Bearer {os.getenv("VIBER")}"
}

f = open(Path(__file__).parent / "vibing.py", "w")
f.write("# Generated by vibing.py\n")
f.flush()

while True: 
    try:
        content = ""
        result = requests.post(url=url, headers=headers, data=payload).json()
        code = result["choices"][0]["message"]["content"].split("\n")
        for i in range(len(code)):
            if code[i].strip() == "```python":
                i += 1
                while i < len(code) and code[i].strip() != "```":
                    content += code[i] + "\n"
                    i += 1
        print(content)
        f.write(content)
        f.flush()
        os.system("git add .")
        os.system('git commit -m "Update vibing.py"')
        os.system("git push -u origin main")
    except Exception as e:
        print(f"Error: {e}")
    

